{"version":3,"sources":["images/cat-bar.jpeg","images/cat-bathtub.jpeg","images/cat-dashboard.jpeg","images/cat-lap.jpeg","images/cat-tongue.jpeg","images/cat-upsidedown.jpeg","images/code.svg","components/About.tsx","components/Error.tsx","components/TileComponent.tsx","images/tileData.tsx","Styles.tsx","components/Home.tsx","components/Learn.tsx","components/Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","About","href","Error","TileComponent","props","tileContent","classes","tilePopover","tile","Popover","id","title","className","GridListTile","key","this","img","IconButton","aria-label","hover","url","OverlayTrigger","placement","delay","show","hide","overlay","Avatar","alt","src","variant","avatarSize","React","Component","tileData","require","useStyles","makeStyles","theme","createStyles","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","margin","gridList","color","opacity","width","height","spacing","Home","GridList","map","Learn","Navigation","to","App","basename","forceRefresh","path","component","exact","Button","NavLink","ListSubheader","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b7caa57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat-bar.26961ae6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cat-bathtub.b079e743.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cat-dashboard.5d72b192.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cat-lap.9a3373a2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cat-tongue.185011ae.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cat-upsidedown.7c4ea786.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/code.bf3121ad.svg\";","import React from 'react';\n\nfunction About() {\n  return (\n    <div>\n      <h1>About Us</h1>\n      <p>Hello! My name is Michelle.</p>\n      <p>I'm creating this personal website to learn more about web development.</p>\n      <p>Fun fact: My original goal for this project was just to learn how to deploy a site using GitHub Pages.</p>\n      <p>However, I've learned a lot more since then!</p>\n      <i>Click <a href='/tsx-app/learn'>here</a> to see my progress updates.</i>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\nfunction Error() {\n  return (\n    <div>\n      <p>Error: Sorry, page does not exist! x_x </p>\n    </div>\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover'\nimport Avatar from '@material-ui/core/Avatar';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface TileComponentProps {\n  tileContent: any;\n  classes: any;\n}\n\nclass TileComponent extends React.Component<any, TileComponentProps> {\n  private tileContent: any;\n  private classes: any;\n  private tilePopover = (tile: any) => {\n    return <Popover\n      id=\"popover-positioned-top\"\n      title=\"Popover top\"\n      className={this.classes.title}\n    >\n      <strong>{tile.title}</strong>\n    </Popover>\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.tileContent = props.tileContent;\n    this.classes = props.classes;\n  }\n\n  render() {\n    return (\n      <GridListTile key={this.tileContent.img}>\n          <IconButton\n            aria-label={`info about ${this.tileContent.title}`}\n            className={this.classes.hover}\n            href={this.tileContent.url}\n          >\n            <OverlayTrigger\n              placement=\"bottom\"\n              delay={{ show: 150, hide: 200 }}\n              overlay={this.tilePopover(this.tileContent)}\n            >\n              <Avatar\n                alt={this.tileContent.title}\n                src={this.tileContent.img}\n                variant='circle'\n                className={this.classes.avatarSize}\n              />\n            </OverlayTrigger>\n          </IconButton>\n      </GridListTile>\n    );\n  }\n}\n\nexport default TileComponent;\n","const tileData = [\n  {\n    img: require('./cat-bar.jpeg'),\n    title: 'Cat Bar',\n    url: 'https://www.google.com',\n  },\n  {\n    img: require('./cat-bathtub.jpeg'),\n    title: 'Cat Bathtub',\n    url: 'https://www.mozilla.org/en-US/firefox/new',\n  },\n  {\n    img: require('./cat-dashboard.jpeg'),\n    title: 'Cat Dashboard',\n    url: 'https://support.apple.com/downloads/safari',\n  },\n  {\n    img: require('./cat-lap.jpeg'),\n    title: 'Cat Lap',\n    url: 'https://www.microsoft.com/en-us/edge',\n  },\n  {\n    img: require('./cat-tongue.jpeg'),\n    title: 'Cat Tongue',\n    url: 'https://support.microsoft.com/en-us/help/17621/internet-explorer-downloads',\n  },\n  {\n    img: require('./cat-upsidedown.jpeg'),\n    title: 'Cat Upsidedown',\n    url: 'https://www.opera.com/download',\n  }\n];\n\nexport default tileData;","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-evenly',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n      margin: '25px',\n    },\n    gridList: {\n      justifyContent: 'space-evenly',\n    },\n    title: {\n      color: '#602cc9',\n    },\n    hover: {\n      '&:hover': {\n          opacity: .5,\n      },\n    },\n    avatarSize: {\n      width: '250px',\n      height: '250px',\n      margin: theme.spacing(.5),\n    },\n  }),\n);\n\nexport default useStyles;\n","import React from 'react';\nimport TileComponent from './TileComponent';\nimport tileData from '../images/tileData';\nimport useStyles from '../Styles';\nimport { GridList } from '@material-ui/core';\n\nfunction Home() {\n  const classes = useStyles();\n  \n  return (\n    <div>\n      <h1>Home</h1>\n      <div className={classes.root}>\n        <GridList className={classes.gridList} spacing={10}>\n          {tileData.map((tile) => (\n            <TileComponent tileContent={tile} classes={classes}></TileComponent>\n          ))}\n        </GridList>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Learn() {\n  return (\n    <div>\n      <h1>Learn More</h1><br></br>\n      <h2>Progress Updates</h2>\n        <h3>2020</h3>\n          <h4>September</h4>\n            <h5>v4. Create new pages (including the one you're reading now) and navigate to them using react-router</h5>\n              <h6>(We're no longer stuck on the home page!)</h6>\n            <h5>v3. Refactor App into separate React components</h5>\n              <h6>(There's more site content now, so no more adding all code to the same file)</h6>\n          <h4>August</h4>\n            <h5>v2. Experiment with material-ui, bootstrap, and styling</h5>\n            <h5>v1. Site creation using create-react-app for TypeScript and deployment with GitHub Pages</h5>\n              <h6>(After hours of trial and error from following many tutorials...)</h6>\n      <h2>&lt;Code/&gt;</h2>\n        <h5><a href=\"https://github.com/micheung7/tsx-app\">GitHub Repository</a></h5>\n      <h2>Research</h2>\n        <h5><a href=\"https://github.com/gitname/react-gh-pages\">Deploying a React App to GitHub Pages tutorial</a></h5>\n        <h5><a href=\"https://create-react-app.dev/docs/documentation-intro\">Create React App documentation</a></h5>\n        <h5><a href=\"https://www.golangprograms.com/how-to-create-simple-react-router-to-navigate-multiple-pages.html\">React Router navigation</a></h5>\n        <h5><a href=\"https://stackoverflow.com\">Stack Overflow</a></h5>\n      <h2>Image Attributions</h2>\n        <h5>Code Icon made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a></h5>\n    </div>\n  );\n}\n\nexport default Learn;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Navigation() {\n  return (\n    <div>\n      <NavLink to=\"/\">Home</NavLink>\n      <NavLink to=\"/about\">About</NavLink>\n      <NavLink to=\"/learn\">Learn</NavLink>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, NavLink } from 'react-router-dom';\nimport './App.css';\nimport About from './components/About';\nimport Error from './components/Error';\nimport Home from './components/Home';\nimport Learn from './components/Learn';\nimport Navigation from './components/Navigation';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/tsx-app\" forceRefresh={true}>\n        <div>\n          <Navigation />\n            <Switch>\n              <Route path=\"/\" component={Home} exact/>\n              <Route path=\"/about\" component={About}/>\n              <Route path=\"/learn\" component={Learn}/>\n              <Route component={Error}/>\n            </Switch>\n        </div> \n      <br></br>\n      <Button component={NavLink} to=\"/learn\" variant=\"outlined\">\n        <ListSubheader component=\"div\">Site Development</ListSubheader>\n        <img src={require('./images/code.svg')} alt=\"code\" width=\"30\" height=\"30\"/>\n        <ListSubheader component=\"div\">...Work in Progress...</ListSubheader>\n      </Button>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}